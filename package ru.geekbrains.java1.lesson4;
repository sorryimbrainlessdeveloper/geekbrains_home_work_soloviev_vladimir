1. Полностью разобраться с кодом, попробовать переписать с нуля, стараясь не подглядывать в методичку;

2. Переделать проверку победы, чтобы она не была реализована просто набором условий, например, с использованием циклов.

3. * Попробовать переписать логику проверки победы, чтобы она работала для поля 5х5 и количества фишек 4. Очень желательно не делать это просто набором условий для каждой из возможных ситуаций;

4. *** Доработать искусственный интеллект, чтобы он мог блокировать ходы игрока.


import java.util.Random;
import java.util.Scanner;

public class Main1 {

    public static final int SIZE = 3;
    public static final int SIZE_Y = 3;
    public static final int SIZE_X = 3;
    public static final char EMPTHY_DOT = '*';
    public static final char DOT_X = 'X';
    public static final char DOT_O = '0';
    public static final char[][] map = new char[SIZE][SIZE];
    public static final int win = 3;

    public static Scanner scanner = new Scanner(System.in);
    public static Random random = new Random();

    public static void main(String[] args) {
        initMap();
        printMap();

        while (true){
            humanTurn();
            printMap();
            if(checkWin(DOT_X)){
                System.out.println("human win");
                break;
            }
            if(freePlace()){
                System.out.println("draw");
                break;
            }
            aiTurn();
            System.out.println();
            printMap();
            if(checkWin(DOT_O)){
                System.out.println("ai win");
                break;
            }
            if(freePlace()){
                System.out.println("draw");
                break;
            }
        }
    }

    public static void initMap(){
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                map[i][j] = EMPTHY_DOT;
            }
        }
    }
    public static void printMap(){
        for (int i = 0; i < SIZE; i++) {
            System.out.println(" ");
            for (int j = 0; j < SIZE; j++) {
                System.out.print(map[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
    }
    public static void humanTurn(){
        int x,y;
        do{
            System.out.println("input coordinates x y ");
            x = scanner.nextInt() - 1;
            y = scanner.nextInt() - 1;
        } while(!isCalledValid(x,y));
        map[y][x] = DOT_X;
    }
    public static boolean isCalledValid(int x, int y){
        if(x < 0 || x >= SIZE || y < 0 || y >= SIZE) return false;
        if(map[y][x] == EMPTHY_DOT) return true;
        return false;
    }
    public static void aiTurn(){
        int x,y;
        do{
            x = random.nextInt(SIZE);
            y = random.nextInt(SIZE);
        } while(!isCalledValid(x,y));
        System.out.println("ai move x y " + (x+1) + "" + (y+1));
        map[y][x] = DOT_O;
    }

    public static boolean freePlace(){
        for (int i = 0; i < SIZE_Y; i++) {
            for (int j = 0; j < SIZE_X; j++) {
                if(map[i][j] == EMPTHY_DOT)return false;
            }
        }
        return true;
    }

    public static boolean checkWin(char sign){
        for (int i = 0; i < SIZE_Y; i++) {
            int result = 0;
            for (int j = 0; j < SIZE_X; j++) {
                if(map[i][j] == sign)result++;
            }
            if(result == win) return true;
        }
        for (int i = 0; i < SIZE_Y; i++) {
            int result = 0;
            for (int j = 0; j < SIZE_X; j++) {
                if(map[i][j] == sign) result++;
            }
            if(result == win) return true;
        }
        int firstDiag = 0;
        for (int i = 0; i < SIZE_Y; i++) {
            for (int j = 0; j < SIZE_X; j++) {
                if(i == j && map[i][j] == sign) firstDiag++;
            }
        }
        int secondDiag = 0;
        if(firstDiag == win) return true;

        for (int i = 0, j = SIZE_Y - 1; i < SIZE_X && j > 0; i++, j-- ) {
            if(map[i][j] == sign) secondDiag++;
        }
        if(secondDiag == win)return true;
        return false;
    }
}